name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - strzelec

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 21

    - name: Build with Maven
      run: mvn clean package

    - name: Log in to Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Azure Container Registry
      run: |
        echo ${{ secrets.ACR_NAME }} | az acr login --name ${{ secrets.ACR_NAME }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/tabi-backend:latest .
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/tabi-backend:latest

    - name: Create Azure Container App Environment
      run: |
        az containerapp env create --name tabienv --resource-group zzpjtabi --location polandcentral || echo "Environment already exists"

    - name: Deploy to Azure Container Apps
      run: |
        az containerapp create --name tabiapp --resource-group zzpjtabi --environment tabienv --image ${{ secrets.ACR_NAME }}.azurecr.io/tabi-backend:latest --ingress 'external' --target-port 8080 --env-vars POSTGRES_DB={{ secrets.POSTGRES_SERVER }} POSTGRES_USER={{ secrets.POSTGRES_USER }} POSTGRES_PASSWORD={{ secrets.POSTGRES_PASSWORD }} DB_HOSTNAME={{ secrets.DB_HOSTNAME }} DB_NAME={{ secrets.POSTGRES_DATABASE }} APP_PROFILE=prod || az containerapp update --name tabiapp --resource-group zzpjtabi --set-env-vars POSTGRES_DB={{ secrets.POSTGRES_SERVER }} POSTGRES_USER={{ secrets.POSTGRES_USER }} POSTGRES_PASSWORD={{ secrets.POSTGRES_PASSWORD }} DB_HOSTNAME={{ secrets.DB_HOSTNAME }} DB_NAME={{ secrets.POSTGRES_DATABASE }} APP_PROFILE=prod
